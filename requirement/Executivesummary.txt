Executive Summary of Requirement Document This requirement document contains 4 major parts which includes:* Team identification & game summary.* Use cases with identification of actors, actions and detailed scenarios. * Activity diagram for primary scenarios. System diagram with clear relationship between each action. * Basic game board interfaces.To start, an introduction to our team was provided, followed by the general game description. Then, based on the logic sequence of the game, we developed 4 actors and 14 actions. For each action, we provided a few detailed scenarios that might associate with this specific action, as well as an activity diagram for primary scenarios. In addition, with all the actors and actions we had, we figured out the relationship between actions and constructed the system diagram. Finally, we designed 4 basic game board interfaces that matched with our initial setting of the game. 1. Team identification & game summary.* This is a team of five with 3 international students and 2 local students. We agreed on using democratic strategies on resolving conflicts. We meet at least three times a week. * The game involves using robots with different attributes in different team to eliminate one another. The beginning of this document has provided a detailed game description. 2. Use cases. As it’s ultimately a computer game, the logic order of describing each use case is based on assuming how the player will play this game.   2.1 The game starts with the actor HOST with the action select mode, which associated with the situations of:* Choosing from Human VS Human, Human VS AI or AI VS AI.* Message with system to generate game board interface with appropriate side length.   2.2 Second step is HOST select robot. This action is closely connected to the action Download, Enumerate, register, revise and retire, and has situations including:* Select robot(s) from robot library. This automatically activate Download and Enumerate. All the old robots will be displayed for choosing.* Register new robot(s).* Decides on whether to revise or retire robot(s) or not. 2.3 Parallel to the second step is the step that actor Robot Liberian performs the action Download.* Downloading all the robots’ information from robot library. The information includes the win&lose times and win lose wining rate of a specific robot.2.3 Third step is the actor player (human or AI) manipulating the robots, which will associate actions including Move, Rotate, Attack and Switch.   * To move. Robot move one step a time if have move points. Robot will rotate first then move to the destination.* To attack. Robot can attack only if it has enemies in range and have attack points. Robot(s) that being attacked lost health points.* To Switch. This will end the current round for a specific robot. 2.4 Parallel to the third step is the step that actor Gamemaster performs the action UpdateStats and update GameBoard.* Update the statistics of each robot in every round, to keep track of the move points, attack points and health point. * Update the gameboard each time a robot moves or be destroyed. 2.5 The final step is the actor Robot Librarian performs the action upload. * When the game ends, gamemater interact with robot librarian with the win&lose information of each robot. * Robot librarian upload the win/lose information which is to be kept under the specific robot.3. Activity diagram and system diagram.* The document has 14 Activity diagrams, which is generated from the primary scenarios of each action.* The system diagram has listed 4 actors and 14 actions, with arrows between actions to clearly demonstrate the relationship between actions.4. Four basic interfaces.* First, when entering the game, there is an welcome interface, which also can be used by host to select mode.* Second, there is another interface displays all robots’ information for host to select mode.* Third, we will have the main interface for the game, with game board in the center and a small table at the down-right corner of the screen to display robot statistics. * Lastly, there will be an interface designed specifically for the end of the game with the congratulations image for the winning team.   In conclusion, based on our understanding of the game, we have developed 4 actors and 14 actions. With the logical order of playing the game, we made clear the relationship between each action and came with the system diagram. Moreover, four different interfaces correspond to different steps of game were designed. The interfaces we have came up with now are subjected to be modified in the future.   